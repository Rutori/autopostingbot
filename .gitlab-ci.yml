image: golang:latest

variables:
  REPO_NAME: "gitlab.com/shitposting/autoposting-bot"

before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - format
  - test
  - build
  - staging
  - production

.exceptions: &exclude  # use <<: *exclude to add this rule to a job
  except:
    changes:
      - README.md
      - FEATURE.md
      - .gitignore
      - config_example.toml
      - run_gometalint.sh

go-fmt:
  stage: format
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
  <<: *exclude

      
lint_code:
  stage: format
  before_script:
    - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
    - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
    - cd $GOPATH/src/$REPO_NAME
    - go get -u golang.org/x/lint/golint
  script:
    - golint -set_exit_status $(go list ./... | grep -v /vendor/)
  <<: *exclude

.race_detector:
  stage: test
  script:
    - go test -race -short $(go list ./... | grep -v /vendor/)
  <<: *exclude

.test:
  stage: test
  script: 
    - go test ./...
  <<: *exclude

compile:
  stage: build
  script:
    - make build
  <<: *exclude
  artifacts:
    paths:
      - autoposting-bot
      
test-deploy:
  stage: staging
  before_script:
    - apt update
    - apt install -y -qq sshpass
  script:
    - sshpass -V
    - export SSHPASS=$USER_PASS
    - sshpass -e ssh -p $PORT -o stricthostkeychecking=no $USER_ID@$HOSTNAME systemctl --user stop autoposting-bot
    - sshpass -e ssh -p $PORT -o stricthostkeychecking=no $USER_ID@$HOSTNAME mv /home/$USER_ID/go/bin/autoposting-bot /home/$USER_ID/go/bin/autoposting-bot_bak
    - sshpass -e scp -P $PORT -o stricthostkeychecking=no -r autoposting-bot $USER_ID@$HOSTNAME:/home/$USER_ID/go/bin/autoposting-bot
    - sshpass -e ssh -p $PORT -o stricthostkeychecking=no $USER_ID@$HOSTNAME systemctl --user start autoposting-bot
  <<: *exclude
      
prod-deploy:
  stage: production
  before_script:
    - apt update
    - apt install -y -qq sshpass
  script:
    - sshpass -V
    - export SSHPASS=$PROD_USER_PASS
    - sshpass -e ssh -p $PROD_PORT -o stricthostkeychecking=no $PROD_USER_ID@$PROD_HOSTNAME systemctl --user stop autoposting-bot
    - sshpass -e ssh -p $PROD_PORT -o stricthostkeychecking=no $PROD_USER_ID@$PROD_HOSTNAME mv /home/$PROD_USER_ID/go/bin/autoposting-bot /home/$PROD_USER_ID/go/bin/autoposting-bot_bak
    - sshpass -e scp -P $PROD_PORT -o stricthostkeychecking=no -r autoposting-bot $PROD_USER_ID@$PROD_HOSTNAME:/home/$PROD_USER_ID/go/bin/autoposting-bot
    - sshpass -e ssh -p $PROD_PORT -o stricthostkeychecking=no $PROD_USER_ID@$PROD_HOSTNAME systemctl --user start autoposting-bot
  when: manual
  <<: *exclude
