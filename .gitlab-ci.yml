image: golang:latest

cache:
  paths:
    - /apt-cache
    - /go/src/github.com
    - /go/src/golang.org
    - /go/src/google.golang.org
    - /go/src/gopkg.in

variables:
  REPO_NAME:gitlab.com/shitposting/autoposting-bot

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME
  - make dep

stages:
  - format
  - test
  - build

format:
  stage: format
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)

race_detector:
  stage: test
  script:
    - go test -race -short $(go list ./... | grep -v /vendor/)

memory_sanitizer:
  stage: test
  script:
    - go test -msan -short $(go list ./... | grep -v /vendor/)

lint_code:
  stage: test
  script:
    - golint -set_exit_status $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  script:
    - make build
  artifacts:
    paths:
      - autoposting-bot
